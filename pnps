#!/usr/local/bin/bash


bold () { echo -ne "\x1b[1m${@}\x1b[0m\r"; }
mvup () { echo -ne "\x1b[1A\r"; }
mvdown () { echo -ne "\x1b[1B\r"; }

pos=0
margin=4
printMargin=$(for i in $(seq ${margin}); do echo -n " "; done)
max=0
temp=$(mktemp)
declare -a results=()


renderChoices () {
  len=0
  declare -a list=()

  tput cup 3 0
  
  for i in ${@}; do
    cur=$(echo "${i}" | tr "#" " ")
    list+=("${cur}")
    echo "${cur}"
    ((len+=1))
  done

  tput cup 3 0
  bold "${list[pos]}\r"
  
  while true; do
    read -r -sn1 t
    case $t in
      "A")
        if [[ pos -gt 0 ]]
        then
          printf "${list[pos]}\r"
          ((pos-=1))
          mvup
        else
          printf "${list[pos]}\r"
          pos=$((len - 1))
          tput cup $((len - 1)) 0
        fi 
        bold "${list[pos]}\r"
      ;; 
      "B")
        if [[ pos -lt $((len - 1)) ]]
        then
          printf "${list[pos]}\r"
          ((pos+=1))
          mvdown
        else
          printf "${list[pos]}\r"
          pos=0
          tput cup 3 0
        fi 
        bold "${list[pos]}\r"
      ;; 
      "" )
        # ns
        # echo -n "${list[pos]}" > "${tempfile}"
        break
      ;;
    esac
  done
  
}

(
  render() {
    list=$(npm search "${1}" --json | jq '.[] | .name + "|" + .description' | tr " " "_")

    for i in ${list}; do
      item=$(echo "${i}" | tr -d '"' | tr "_" " ")
      sanitized=$(echo "${item}" | tr " " "_")
      title=$(echo "${item}" | cut -d "|" -f 1)
      [[ ${#title} -gt ${max} ]] && max=${#title}

      results+=(${sanitized})
    done

    for i in ${results[*]}; do
      title=$(echo "${i}" | cut -d "|" -f 1)
      description=$(echo "${i}" | cut -d "|" -f 2)

      padding=$(for i in $(seq $((${max} - ${#title}))); do echo -n " "; done)
      leftTxt="${printMargin}${title}${padding}  |  "

      descriptionLen=$(($(($(tput cols) - ${#leftTxt})) - $((${margin} * 2))))
      [[ ${descriptionLen} -lt 1 ]] && descriptionLen=1
      
      rightTxt=$(echo "${description}" | cut -c 1-${descriptionLen})

      echo "${leftTxt}${rightTxt}" | tr "_" " "
    done
  }

  [[ -z "${1}" ]] || 
  (
    echo -ne "
      \x1Bc\x1b[3J
      \r${printMargin}searching for: \x1b[1m\x1b[38;5;75m${1}\x1b[0m
    " &&
    declare -a choices=($(render "${1}" | tr " " "#" | tr "\n" " ")) &&
    echo -ne "
      \x1Bc\x1b[3J
      \r${printMargin}found matches: \x1b[1m\x1b[38;5;77m${1}\x1b[0m
    " &&
    renderChoices ${choices[*]}
    echo
  )
)
